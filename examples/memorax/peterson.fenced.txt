# Peterson's lock
# translated from peterson.fenced.rmm
# Memory layout:
# 0 - turn
# 1 - flag[0]
# 2 - flag[1]

thread t0
initial q0
transition q0 q1 write 1 1
transition q1 q2 lock
transition q2 q3 write 1 0
transition q3 q4 unlock
transition q4 q5 read r0 2
transition q5 q6 read r1 0
transition q6 q4 check && == r0 1 == r1 1
transition q6 q7 check || != r0 1 != r1 1
transition q7 q0 write 0 1

end

thread t1
initial q0 
transition q0 q1 write 1 2
transition q1 q2 lock
transition q2 q3 write 0 0
transition q3 q4 unlock
transition q4 q5 read r0 1
transition q5 q6 read r1 0
transition q6 q4 check && == r0 1 == r1 0
transition q6 q7 check || != r0 1 != r1 0
transition q7 q0 write 0 2

end
